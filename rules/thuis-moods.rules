import org.openhab.core.item.*
import org.openhab.core.library.types.*
import org.openhab.core.persistence.*
import org.openhab.model.script.actions.*

var Number moodState = -1
var Number audioState = -1

var String oldState = null

rule "iphone detect"
	when 
		Item netIPhone changed 
		 
	then
	
	if (oldState == null){
		oldState = netIPhone.state.toString
	}
	if (moodState==-1){
		moodState =0;
	}
	if (audioState==-1){
		audioState =0;
	}
		oldState = netIPhone.state.toString
	
		if(netIPhone.state==OFF)
		{	
			if(Scene_General.state instanceof DecimalType) moodState = Scene_General.state as DecimalType 	
			if(Scene_Radio.state instanceof DecimalType) audioState = Scene_Radio.state as DecimalType 	
			
			postUpdate(Scene_General, 0)
			postUpdate(Scene_Radio, 0)
			logInfo("thuis-moods", "stored light state and powering off")
		}		
		
		if (netIPhone.state==ON){
				postUpdate(Scene_General, moodState)
				postUpdate(Scene_Radio, audioState)
				logInfo("thuis-moods", "restoring state to " + moodState)
		}	
end

rule "change mood"
when	
	Item Scene_General changed
then
	var Number s = -1
	
	if(Scene_General.state instanceof DecimalType)  s  = Scene_General.state as DecimalType 
	
	if(s == 0) callScript("off.script")
	if(s == 1) callScript("work.script")
	if(s == 2) callScript("movie.script")
	if(s == 3) callScript("sleep.script")
	
			
	logInfo("scene change: ", " "+ Scene_General.state)

end

